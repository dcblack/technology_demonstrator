#!/bin/bash
#
# Info: Create tarball for distribution

function Display_Syntax() {
  ERRORS=0
  if [[ $# != 0 ]]; then
    ERRORS=1
    echo "ERROR: $*"
  fi
  cat <<EOF
SYNTAX: mktar [OPTIONS] ( all | hls | src | sc | zed )
EOF
  exit $ERRORS
}

D=$(realpath $(dirname $(find ../.. -path '*Example/setup.profile')))
B=$(basename $D)
T=zynq_hls_n_systemc_example
V=2.0
G=0
L=0
N=0
Q=0
CMD=""
ARGS="$*"
while [[ $# != 0 ]]; do
  if [[ "$1" == "-g" ]]; then # list
    G=1;
  elif [[ "$1" == "-l" ]]; then # list
    L=1; N=1;
  elif [[ "$1" == "-n" ]]; then # not really
    N=1;
  elif [[ "$1" == "-q" ]]; then # quiet
    Q=1;
  elif [[ "$1" == "-t" ]]; then # target directory name
    shift
    T="$1";
  elif [[ "$1" == "-v" ]]; then # version
    shift
    V="$1";
  elif [[ "$1" =~ -.* ]]; then
    Display_Syntax "Unexpected option '$1'!"
  elif [[ $CMD == "" ]]; then
    CMD="$1"
  else
    Display_Syntax "Unexpected argument '$1'!"
  fi
  shift
done
if [[ $CMD == "" ]]; then
  Display_Syntax
fi

LOGFILE="$D/$T-$V.log"
TARBALL="$D/$T-$V.tgz"
MD5TEXT="$D/$T-$V.md5"
TAROPTS="chvzf"
STD="              \
  $T/ABOUT.txt     \
  $T/GITHEAD       \
  $T/LICENSE.txt   \
  $T/NOTES.txt     \
  $T/README.txt    \
  $T/TOOLS.txt     \
  $T/bin           \
  $T/docs          \
  $T/etc           \
  $T/lib           \
  $T/setup.profile \
  "
hls_LIST=$(echo          \
  $T/hls/*.tcl           \
  $T/hls/example_run.log \
  $T/src/*.{h,cpp}       \
  $T/src/Makefile        \
  )
src_LIST=$(echo       \
  $T/src/*-golden.log \
  $T/src/*.{h,cpp}    \
  $T/src/Makefile     \
  )
sysc_LIST=$(echo       \
  $T/sysc/*-golden.log \
  $T/sysc/*.{h,cpp,c}  \
  $T/sysc/Makefile     \
  )
zed_LIST=$(echo         \
  $T/zedb*/*-golden.log \
  $T/zedb*/*.{h,c}      \
  $T/zedb*/Makefile     \
  )
if [[ $G == 1 ]]; then
top_LIST=$(echo \
  $T/Makefile   \
  $T/.git\
  )
else
top_LIST=$(echo \
  $T/Makefile   \
  )
fi
all_LIST=$(echo \
  $top_LIST     \
  $hls_LIST     \
  $src_LIST     \
  $sysc_LIST    \
  $zed_LIST     \
  )

cd $(dirname $D)
if [[ ! -L $T ]]; then
  ln -s $D $T
fi
LIST=""
case $CMD in
  all) LIST=$all_LIST
       ;;
  hls) LIST=$hls_LIST
       ;;
  src) LIST=$src_LIST
       ;;
  sc ) LIST=$sysc_LIST
       ;;
  zed) LIST=$zed_LIST
       ;;
  *  ) Display_Syntax "Unknown directive '$CMD'"
       ;;
esac
LIST=$(echo $LIST | perl -pe 's/\s+/ /g;s/^ //;s/ *$/\n/;')
if [[ "$LIST" != "" ]]; then
  if [[ $L == 1 ]]; then
    for e in $LIST; do
      test -r "$e" && file $e || echo "Missing $e"
    done
  fi
  echo "# mktar $ARGS" > $LOGFILE
  if [[ $Q == 0 ]]; then
    echo "% tar $TAROPTS '$TARBALL' $STD '$LIST'" | tee -a $LOGFILE
  fi
  if [[ $N == 0 ]]; then
    tar $TAROPTS $TARBALL $STD $LIST >> $LOGFILE 2>&1;
    echo "#EOF" >> $LOGFILE
    echo "% md5 $(basename $TARBALL)" | tee $MD5TEXT
    md5 $TARBALL >>$MD5TEXT
    printf "Created under $D/:\n  %s\n  %s\n  %s\n  %s\n"\
           "$(basename $TARBALL)" "$(basename $LOGFILE)" "$(basename $MD5TEXT)"
  fi
  if [[ -L $T ]]; then
    rm $T
  fi
  exit 0;
else
  printf "ERROR: Please select a valid option\n"
  exit 1;
fi

# Author: David C Black
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
